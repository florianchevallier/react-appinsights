{"version":3,"file":"index.js","sources":["../node_modules/@microsoft/applicationinsights-common/dist-esm/Enums.js","../node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/CoreUtils.js","../node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK.Enums/LoggingEnums.js","../node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/AppInsightsCore.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/DataSanitizer.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Util.js","../node_modules/tslib/tslib.es6.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/DataPointType.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Base.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Data.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Envelope.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/Envelope.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Domain.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/EventData.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Event.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/StackFrame.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/ExceptionData.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/ExceptionDetails.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Exception.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/MetricData.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/DataPoint.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/SeverityLevel.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/DataPoint.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Metric.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/PageViewData.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/PageView.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/RemoteDependencyData.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/RemoteDependencyData.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/MessageData.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Trace.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/PageViewPerfData.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/PageViewPerformance.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/Data.js","../node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js","../dist-esm/src/ReactAI.js","../dist-esm/src/withAITracking.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n* Type of storage to differentiate between local storage and session storage\r\n*/\r\nexport var StorageType;\r\n(function (StorageType) {\r\n    StorageType[StorageType[\"LocalStorage\"] = 0] = \"LocalStorage\";\r\n    StorageType[StorageType[\"SessionStorage\"] = 1] = \"SessionStorage\";\r\n})(StorageType || (StorageType = {}));\r\n/**\r\n * Enum is used in aiDataContract to describe how fields are serialized.\r\n * For instance: (Fieldtype.Required | FieldType.Array) will mark the field as required and indicate it's an array\r\n */\r\nexport var FieldType;\r\n(function (FieldType) {\r\n    FieldType[FieldType[\"Default\"] = 0] = \"Default\";\r\n    FieldType[FieldType[\"Required\"] = 1] = \"Required\";\r\n    FieldType[FieldType[\"Array\"] = 2] = \"Array\";\r\n    FieldType[FieldType[\"Hidden\"] = 4] = \"Hidden\";\r\n})(FieldType || (FieldType = {}));\r\n;\r\n//# sourceMappingURL=Enums.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nvar CoreUtils = /** @class */ (function () {\r\n    function CoreUtils() {\r\n    }\r\n    CoreUtils.isNullOrUndefined = function (input) {\r\n        return input === null || input === undefined;\r\n    };\r\n    /**\r\n* Creates a new GUID.\r\n* @return {string} A GUID.\r\n*/\r\n    CoreUtils.disableCookies = function () {\r\n        CoreUtils._canUseCookies = false;\r\n    };\r\n    CoreUtils.newGuid = function () {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(GuidRegex, function (c) {\r\n            // tslint:disable-next-line:insecure-random\r\n            var r = (Math.random() * 16 | 0), v = (c === 'x' ? r : r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n    return CoreUtils;\r\n}());\r\nexport { CoreUtils };\r\nvar GuidRegex = /[xy]/g;\r\n//# sourceMappingURL=CoreUtils.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var LoggingSeverity;\r\n(function (LoggingSeverity) {\r\n    /**\r\n     * Error will be sent as internal telemetry\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"CRITICAL\"] = 1] = \"CRITICAL\";\r\n    /**\r\n     * Error will NOT be sent as internal telemetry, and will only be shown in browser console\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"WARNING\"] = 2] = \"WARNING\";\r\n})(LoggingSeverity || (LoggingSeverity = {}));\r\n/**\r\n * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered\r\n */\r\nexport var _InternalMessageId = {\r\n    // Non user actionable\r\n    BrowserDoesNotSupportLocalStorage: 0,\r\n    BrowserCannotReadLocalStorage: 1,\r\n    BrowserCannotReadSessionStorage: 2,\r\n    BrowserCannotWriteLocalStorage: 3,\r\n    BrowserCannotWriteSessionStorage: 4,\r\n    BrowserFailedRemovalFromLocalStorage: 5,\r\n    BrowserFailedRemovalFromSessionStorage: 6,\r\n    CannotSendEmptyTelemetry: 7,\r\n    ClientPerformanceMathError: 8,\r\n    ErrorParsingAISessionCookie: 9,\r\n    ErrorPVCalc: 10,\r\n    ExceptionWhileLoggingError: 11,\r\n    FailedAddingTelemetryToBuffer: 12,\r\n    FailedMonitorAjaxAbort: 13,\r\n    FailedMonitorAjaxDur: 14,\r\n    FailedMonitorAjaxOpen: 15,\r\n    FailedMonitorAjaxRSC: 16,\r\n    FailedMonitorAjaxSend: 17,\r\n    FailedMonitorAjaxGetCorrelationHeader: 18,\r\n    FailedToAddHandlerForOnBeforeUnload: 19,\r\n    FailedToSendQueuedTelemetry: 20,\r\n    FailedToReportDataLoss: 21,\r\n    FlushFailed: 22,\r\n    MessageLimitPerPVExceeded: 23,\r\n    MissingRequiredFieldSpecification: 24,\r\n    NavigationTimingNotSupported: 25,\r\n    OnError: 26,\r\n    SessionRenewalDateIsZero: 27,\r\n    SenderNotInitialized: 28,\r\n    StartTrackEventFailed: 29,\r\n    StopTrackEventFailed: 30,\r\n    StartTrackFailed: 31,\r\n    StopTrackFailed: 32,\r\n    TelemetrySampledAndNotSent: 33,\r\n    TrackEventFailed: 34,\r\n    TrackExceptionFailed: 35,\r\n    TrackMetricFailed: 36,\r\n    TrackPVFailed: 37,\r\n    TrackPVFailedCalc: 38,\r\n    TrackTraceFailed: 39,\r\n    TransmissionFailed: 40,\r\n    FailedToSetStorageBuffer: 41,\r\n    FailedToRestoreStorageBuffer: 42,\r\n    InvalidBackendResponse: 43,\r\n    FailedToFixDepricatedValues: 44,\r\n    InvalidDurationValue: 45,\r\n    TelemetryEnvelopeInvalid: 46,\r\n    CreateEnvelopeError: 47,\r\n    // User actionable\r\n    CannotSerializeObject: 48,\r\n    CannotSerializeObjectNonSerializable: 49,\r\n    CircularReferenceDetected: 50,\r\n    ClearAuthContextFailed: 51,\r\n    ExceptionTruncated: 52,\r\n    IllegalCharsInName: 53,\r\n    ItemNotInArray: 54,\r\n    MaxAjaxPerPVExceeded: 55,\r\n    MessageTruncated: 56,\r\n    NameTooLong: 57,\r\n    SampleRateOutOfRange: 58,\r\n    SetAuthContextFailed: 59,\r\n    SetAuthContextFailedAccountName: 60,\r\n    StringValueTooLong: 61,\r\n    StartCalledMoreThanOnce: 62,\r\n    StopCalledWithoutStart: 63,\r\n    TelemetryInitializerFailed: 64,\r\n    TrackArgumentsNotSpecified: 65,\r\n    UrlTooLong: 66,\r\n    SessionStorageBufferFull: 67,\r\n    CannotAccessCookie: 68,\r\n    IdTooLong: 69,\r\n};\r\n//# sourceMappingURL=LoggingEnums.js.map","import { EventsDiscardedReason } from \"../JavaScriptSDK.Enums/EventsDiscardedReason\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { NotificationManager } from \"./NotificationManager\";\r\nimport { _InternalLogMessage, DiagnosticLogger } from \"./DiagnosticLogger\";\r\n\"use strict\";\r\nvar AppInsightsCore = /** @class */ (function () {\r\n    function AppInsightsCore() {\r\n        this._isInitialized = false;\r\n        this._extensions = new Array();\r\n        this._channelController = new ChannelController();\r\n    }\r\n    AppInsightsCore.prototype.initialize = function (config, extensions) {\r\n        var _this = this;\r\n        // Make sure core is only initialized once\r\n        if (this._isInitialized) {\r\n            throw Error(\"Core should not be initialized more than once\");\r\n        }\r\n        if (!config || CoreUtils.isNullOrUndefined(config.instrumentationKey)) {\r\n            throw Error(\"Please provide instrumentation key\");\r\n        }\r\n        this.config = config;\r\n        this._notificationManager = new NotificationManager();\r\n        this.config.extensions = CoreUtils.isNullOrUndefined(this.config.extensions) ? [] : this.config.extensions;\r\n        // add notification to the extensions in the config so other plugins can access it\r\n        this.config.extensionConfig = CoreUtils.isNullOrUndefined(this.config.extensionConfig) ? {} : this.config.extensionConfig;\r\n        this.config.extensionConfig.NotificationManager = this._notificationManager;\r\n        this.logger = new DiagnosticLogger(config);\r\n        // Initial validation\r\n        extensions.forEach(function (extension) {\r\n            if (CoreUtils.isNullOrUndefined(extension.initialize)) {\r\n                throw Error(validationError);\r\n            }\r\n        });\r\n        if (this.config.extensions.length > 0) {\r\n            var isValid_1 = true;\r\n            var containsChannels_1 = false;\r\n            this.config.extensions.forEach(function (item) {\r\n                if (CoreUtils.isNullOrUndefined(item)) {\r\n                    isValid_1 = false;\r\n                }\r\n                if (item.priority > ChannelControllerPriority) {\r\n                    containsChannels_1 = true;\r\n                }\r\n            });\r\n            if (!isValid_1) {\r\n                throw Error(validationError);\r\n            }\r\n            if (containsChannels_1) {\r\n                throw Error(validationErrorInExt);\r\n            }\r\n        }\r\n        // Initial validation complete\r\n        // Concat all available extensions before sorting by priority\r\n        (_a = this._extensions).push.apply(_a, [this._channelController].concat(extensions, this.config.extensions));\r\n        this._extensions = this._extensions.sort(function (a, b) {\r\n            var extA = a;\r\n            var extB = b;\r\n            var typeExtA = typeof extA.processTelemetry;\r\n            var typeExtB = typeof extB.processTelemetry;\r\n            if (typeExtA === 'function' && typeExtB === 'function') {\r\n                return extA.priority - extB.priority;\r\n            }\r\n            if (typeExtA === 'function' && typeExtB !== 'function') {\r\n                // keep non telemetryplugin specific extensions at start\r\n                return 1;\r\n            }\r\n            if (typeExtA !== 'function' && typeExtB === 'function') {\r\n                return -1;\r\n            }\r\n        });\r\n        // sort complete\r\n        // Check if any two extensions have the same priority, then warn to console\r\n        var priority = {};\r\n        this._extensions.forEach(function (ext) {\r\n            var t = ext;\r\n            if (t && t.priority) {\r\n                if (!CoreUtils.isNullOrUndefined(priority[t.priority])) {\r\n                    _this.logger.warnToConsole(\"Two extensions have same priority\" + priority[t.priority] + \", \" + t.identifier);\r\n                }\r\n                else {\r\n                    priority[t.priority] = t.identifier; // set a value\r\n                }\r\n            }\r\n        });\r\n        var c = -1;\r\n        // Set next plugin for all until channel controller\r\n        for (var idx = 0; idx < this._extensions.length - 1; idx++) {\r\n            var curr = (this._extensions[idx]);\r\n            if (curr && typeof curr.processTelemetry !== 'function') {\r\n                // these are initialized only, allowing an entry point for extensions to be initialized when SDK initializes\r\n                continue;\r\n            }\r\n            if (curr.priority === ChannelControllerPriority) {\r\n                c = idx + 1;\r\n                break; // channel controller will set remaining pipeline\r\n            }\r\n            this._extensions[idx].setNextPlugin(this._extensions[idx + 1]); // set next plugin\r\n        }\r\n        // initialize channel controller first, this will initialize all channel plugins\r\n        this._channelController.initialize(this.config, this, this._extensions);\r\n        // initialize remaining regular plugins\r\n        this._extensions.forEach(function (ext) {\r\n            var e = ext;\r\n            if (e && e.priority < ChannelControllerPriority) {\r\n                ext.initialize(_this.config, _this, _this._extensions); // initialize\r\n            }\r\n        });\r\n        // Remove sender channels from main list\r\n        if (c < this._extensions.length) {\r\n            this._extensions.splice(c);\r\n        }\r\n        if (this.getTransmissionControls().length === 0) {\r\n            throw new Error(\"No channels available\");\r\n        }\r\n        this._isInitialized = true;\r\n        var _a;\r\n    };\r\n    AppInsightsCore.prototype.getTransmissionControls = function () {\r\n        return this._channelController.ChannelControls;\r\n    };\r\n    AppInsightsCore.prototype.track = function (telemetryItem) {\r\n        if (telemetryItem === null) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            // throw error\r\n            throw Error(\"Invalid telemetry item\");\r\n        }\r\n        if (telemetryItem.baseData && !telemetryItem.baseType) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            throw Error(\"Provide data.baseType for data.baseData\");\r\n        }\r\n        if (!telemetryItem.baseType) {\r\n            // Hard coded from Common::Event.ts::Event.dataType\r\n            telemetryItem.baseType = \"EventData\";\r\n        }\r\n        if (!telemetryItem.iKey) {\r\n            // setup default iKey if not passed in\r\n            telemetryItem.iKey = this.config.instrumentationKey;\r\n        }\r\n        if (!telemetryItem.time) {\r\n            // add default timestamp if not passed in\r\n            telemetryItem.time = new Date().toISOString();\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.ver)) {\r\n            // CommonSchema 4.0\r\n            telemetryItem.ver = \"4.0\";\r\n        }\r\n        // do basic validation before sending it through the pipeline\r\n        this._validateTelmetryItem(telemetryItem);\r\n        this._updateSdkVersion(telemetryItem);\r\n        // invoke any common telemetry processors before sending through pipeline\r\n        var i = 0;\r\n        while (i < this._extensions.length) {\r\n            if (this._extensions[i].processTelemetry) {\r\n                this._extensions[i].processTelemetry(telemetryItem); // pass on to first extension that can support processing\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.\r\n     * The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be\r\n     * called.\r\n     * @param {INotificationListener} listener - An INotificationListener object.\r\n     */\r\n    AppInsightsCore.prototype.addNotificationListener = function (listener) {\r\n        this._notificationManager.addNotificationListener(listener);\r\n    };\r\n    /**\r\n     * Removes all instances of the listener.\r\n     * @param {INotificationListener} listener - INotificationListener to remove.\r\n     */\r\n    AppInsightsCore.prototype.removeNotificationListener = function (listener) {\r\n        this._notificationManager.removeNotificationListener(listener);\r\n    };\r\n    /**\r\n     * Periodically check logger.queue for\r\n     */\r\n    AppInsightsCore.prototype.pollInternalLogs = function () {\r\n        var _this = this;\r\n        var interval = this.config.diagnosticLogInterval;\r\n        if (!(interval > 0)) {\r\n            interval = 10000;\r\n        }\r\n        return setInterval(function () {\r\n            var queue = _this.logger.queue;\r\n            queue.forEach(function (logMessage) {\r\n                var item = {\r\n                    name: \"InternalMessageId: \" + logMessage.messageId,\r\n                    iKey: _this.config.instrumentationKey,\r\n                    time: new Date().toISOString(),\r\n                    baseType: _InternalLogMessage.dataType,\r\n                    baseData: { message: logMessage.message }\r\n                };\r\n                _this.track(item);\r\n            });\r\n            queue.length = 0;\r\n        }, interval);\r\n    };\r\n    AppInsightsCore.prototype._validateTelmetryItem = function (telemetryItem) {\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.name)) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry name required\");\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.time)) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry timestamp required\");\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.iKey)) {\r\n            this._notifiyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry instrumentationKey required\");\r\n        }\r\n    };\r\n    AppInsightsCore.prototype._updateSdkVersion = function (telemetryItem) {\r\n        if (!telemetryItem.ext) {\r\n            telemetryItem.ext = {};\r\n        }\r\n        if (!telemetryItem.ext.sdk) {\r\n            telemetryItem.ext.sdk = {};\r\n        }\r\n        var version = \"\";\r\n        for (var i = 0; i < this._extensions.length; i++) {\r\n            var ext = this._extensions[i];\r\n            if (ext.identifier && ext.version) {\r\n                var str = ext.identifier + \":\" + ext.version + \";\";\r\n                version = version.concat(str);\r\n            }\r\n        }\r\n        if (version != \"\") {\r\n            telemetryItem.ext.sdk['libVer'] = version;\r\n        }\r\n    };\r\n    AppInsightsCore.prototype._notifiyInvalidEvent = function (telemetryItem) {\r\n        this._notificationManager.eventsDiscarded([telemetryItem], EventsDiscardedReason.InvalidEvent);\r\n    };\r\n    return AppInsightsCore;\r\n}());\r\nexport { AppInsightsCore };\r\nvar ChannelController = /** @class */ (function () {\r\n    function ChannelController() {\r\n        this.identifier = \"ChannelControllerPlugin\";\r\n        this.priority = ChannelControllerPriority; // in reserved range 100 to 200\r\n    }\r\n    ChannelController.prototype.processTelemetry = function (item) {\r\n        this.channelQueue.forEach(function (queues) {\r\n            // pass on to first item in queue\r\n            if (queues.length > 0) {\r\n                queues[0].processTelemetry(item);\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(ChannelController.prototype, \"ChannelControls\", {\r\n        get: function () {\r\n            return this.channelQueue;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChannelController.prototype.initialize = function (config, core, extensions) {\r\n        var _this = this;\r\n        if (config.isCookieUseDisabled) {\r\n            CoreUtils.disableCookies();\r\n        }\r\n        this.channelQueue = new Array();\r\n        if (config.channels) {\r\n            var invalidChannelIdentifier_1 = undefined;\r\n            config.channels.forEach(function (queue) {\r\n                if (queue && queue.length > 0) {\r\n                    queue = queue.sort(function (a, b) {\r\n                        return a.priority - b.priority;\r\n                    });\r\n                    // Initialize each plugin\r\n                    queue.forEach(function (queueItem) {\r\n                        if (queueItem.priority < ChannelControllerPriority) {\r\n                            invalidChannelIdentifier_1 = queueItem.identifier;\r\n                        }\r\n                        queueItem.initialize(config, core, extensions);\r\n                    });\r\n                    if (invalidChannelIdentifier_1) {\r\n                        throw Error(ChannelValidationMessage + invalidChannelIdentifier_1);\r\n                    }\r\n                    for (var i = 1; i < queue.length; i++) {\r\n                        queue[i - 1].setNextPlugin(queue[i]); // setup processing chain\r\n                    }\r\n                    _this.channelQueue.push(queue);\r\n                }\r\n            });\r\n        }\r\n        var arr = new Array();\r\n        for (var i = 0; i < extensions.length; i++) {\r\n            var plugin = extensions[i];\r\n            if (plugin.priority > ChannelControllerPriority) {\r\n                arr.push(plugin);\r\n            }\r\n        }\r\n        if (arr.length > 0) {\r\n            // sort if not sorted\r\n            arr = arr.sort(function (a, b) {\r\n                return a.priority - b.priority;\r\n            });\r\n            // Initialize each plugin\r\n            arr.forEach(function (queueItem) { return queueItem.initialize(config, core, extensions); });\r\n            // setup next plugin\r\n            for (var i = 1; i < arr.length; i++) {\r\n                arr[i - 1].setNextPlugin(arr[i]);\r\n            }\r\n            this.channelQueue.push(arr);\r\n        }\r\n    };\r\n    return ChannelController;\r\n}());\r\nvar validationError = \"Extensions must provide callback to initialize\";\r\nvar validationErrorInExt = \"Channels must be provided through config.channels only\";\r\nvar ChannelControllerPriority = 500;\r\nvar ChannelValidationMessage = \"Channel has invalid priority\";\r\n//# sourceMappingURL=AppInsightsCore.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { LoggingSeverity, _InternalMessageId } from '@microsoft/applicationinsights-core-js';\r\nvar DataSanitizer = /** @class */ (function () {\r\n    function DataSanitizer() {\r\n    }\r\n    DataSanitizer.sanitizeKeyAndAddUniqueness = function (logger, key, map) {\r\n        var origLength = key.length;\r\n        var field = DataSanitizer.sanitizeKey(logger, key);\r\n        // validation truncated the length.  We need to add uniqueness\r\n        if (field.length !== origLength) {\r\n            var i = 0;\r\n            var uniqueField = field;\r\n            while (map[uniqueField] !== undefined) {\r\n                i++;\r\n                uniqueField = field.substring(0, DataSanitizer.MAX_NAME_LENGTH - 3) + DataSanitizer.padNumber(i);\r\n            }\r\n            field = uniqueField;\r\n        }\r\n        return field;\r\n    };\r\n    DataSanitizer.sanitizeKey = function (logger, name) {\r\n        var nameTrunc;\r\n        if (name) {\r\n            // Remove any leading or trailing whitepace\r\n            name = DataSanitizer.trim(name.toString());\r\n            // truncate the string to 150 chars\r\n            if (name.length > DataSanitizer.MAX_NAME_LENGTH) {\r\n                nameTrunc = name.substring(0, DataSanitizer.MAX_NAME_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NameTooLong, \"name is too long.  It has been truncated to \" + DataSanitizer.MAX_NAME_LENGTH + \" characters.\", { name: name }, true);\r\n            }\r\n        }\r\n        return nameTrunc || name;\r\n    };\r\n    DataSanitizer.sanitizeString = function (logger, value, maxLength) {\r\n        if (maxLength === void 0) { maxLength = DataSanitizer.MAX_STRING_LENGTH; }\r\n        var valueTrunc;\r\n        if (value) {\r\n            maxLength = maxLength ? maxLength : DataSanitizer.MAX_STRING_LENGTH; // in case default parameters dont work\r\n            value = DataSanitizer.trim(value);\r\n            if (value.toString().length > maxLength) {\r\n                valueTrunc = value.toString().substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StringValueTooLong, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n            }\r\n        }\r\n        return valueTrunc || value;\r\n    };\r\n    DataSanitizer.sanitizeUrl = function (logger, url) {\r\n        return DataSanitizer.sanitizeInput(logger, url, DataSanitizer.MAX_URL_LENGTH, _InternalMessageId.UrlTooLong);\r\n    };\r\n    DataSanitizer.sanitizeMessage = function (logger, message) {\r\n        var messageTrunc;\r\n        if (message) {\r\n            if (message.length > DataSanitizer.MAX_MESSAGE_LENGTH) {\r\n                messageTrunc = message.substring(0, DataSanitizer.MAX_MESSAGE_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.MessageTruncated, \"message is too long, it has been truncated to \" + DataSanitizer.MAX_MESSAGE_LENGTH + \" characters.\", { message: message }, true);\r\n            }\r\n        }\r\n        return messageTrunc || message;\r\n    };\r\n    DataSanitizer.sanitizeException = function (logger, exception) {\r\n        var exceptionTrunc;\r\n        if (exception) {\r\n            if (exception.length > DataSanitizer.MAX_EXCEPTION_LENGTH) {\r\n                exceptionTrunc = exception.substring(0, DataSanitizer.MAX_EXCEPTION_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ExceptionTruncated, \"exception is too long, it has been truncated to \" + DataSanitizer.MAX_EXCEPTION_LENGTH + \" characters.\", { exception: exception }, true);\r\n            }\r\n        }\r\n        return exceptionTrunc || exception;\r\n    };\r\n    DataSanitizer.sanitizeProperties = function (logger, properties) {\r\n        if (properties) {\r\n            var tempProps = {};\r\n            for (var prop in properties) {\r\n                var value = properties[prop];\r\n                if (typeof value === \"object\" && typeof JSON !== \"undefined\") {\r\n                    // Stringify any part C properties\r\n                    try {\r\n                        value = JSON.stringify(value);\r\n                    }\r\n                    catch (e) {\r\n                        logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, \"custom property is not valid\", { exception: e }, true);\r\n                    }\r\n                }\r\n                value = DataSanitizer.sanitizeString(logger, value, DataSanitizer.MAX_PROPERTY_LENGTH);\r\n                prop = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, prop, tempProps);\r\n                tempProps[prop] = value;\r\n            }\r\n            properties = tempProps;\r\n        }\r\n        return properties;\r\n    };\r\n    DataSanitizer.sanitizeMeasurements = function (logger, measurements) {\r\n        if (measurements) {\r\n            var tempMeasurements = {};\r\n            for (var measure in measurements) {\r\n                var value = measurements[measure];\r\n                measure = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements);\r\n                tempMeasurements[measure] = value;\r\n            }\r\n            measurements = tempMeasurements;\r\n        }\r\n        return measurements;\r\n    };\r\n    DataSanitizer.sanitizeId = function (logger, id) {\r\n        return id ? DataSanitizer.sanitizeInput(logger, id, DataSanitizer.MAX_ID_LENGTH, _InternalMessageId.IdTooLong).toString() : id;\r\n    };\r\n    DataSanitizer.sanitizeInput = function (logger, input, maxLength, _msgId) {\r\n        var inputTrunc;\r\n        if (input) {\r\n            input = DataSanitizer.trim(input);\r\n            if (input.length > maxLength) {\r\n                inputTrunc = input.substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n            }\r\n        }\r\n        return inputTrunc || input;\r\n    };\r\n    DataSanitizer.padNumber = function (num) {\r\n        var s = \"00\" + num;\r\n        return s.substr(s.length - 3);\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    DataSanitizer.trim = function (str) {\r\n        if (typeof str !== \"string\")\r\n            return str;\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n    * Max length allowed for custom names.\r\n    */\r\n    DataSanitizer.MAX_NAME_LENGTH = 150;\r\n    /**\r\n     * Max length allowed for Id field in page views.\r\n     */\r\n    DataSanitizer.MAX_ID_LENGTH = 128;\r\n    /**\r\n     * Max length allowed for custom values.\r\n     */\r\n    DataSanitizer.MAX_PROPERTY_LENGTH = 8192;\r\n    /**\r\n     * Max length allowed for names\r\n     */\r\n    DataSanitizer.MAX_STRING_LENGTH = 1024;\r\n    /**\r\n     * Max length allowed for url.\r\n     */\r\n    DataSanitizer.MAX_URL_LENGTH = 2048;\r\n    /**\r\n     * Max length allowed for messages.\r\n     */\r\n    DataSanitizer.MAX_MESSAGE_LENGTH = 32768;\r\n    /**\r\n     * Max length allowed for exceptions.\r\n     */\r\n    DataSanitizer.MAX_EXCEPTION_LENGTH = 32768;\r\n    return DataSanitizer;\r\n}());\r\nexport { DataSanitizer };\r\n//# sourceMappingURL=DataSanitizer.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { StorageType } from \"./Enums\";\r\nimport { CoreUtils, _InternalMessageId, LoggingSeverity } from \"@microsoft/applicationinsights-core-js\";\r\nimport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    /*\r\n     * Force the SDK not to use local and session storage\r\n    */\r\n    Util.disableStorage = function () {\r\n        Util._canUseLocalStorage = false;\r\n        Util._canUseSessionStorage = false;\r\n    };\r\n    /**\r\n     * Gets the localStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getLocalStorageObject = function () {\r\n        if (Util.canUseLocalStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n     * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n     * @param storageType Type of storage\r\n     * @return {Storage} Returns storage object verified that it is usable\r\n     */\r\n    Util._getVerifiedStorageObject = function (storageType) {\r\n        var storage = null;\r\n        var fail;\r\n        var uid;\r\n        try {\r\n            if (typeof window === 'undefined') {\r\n                return null;\r\n            }\r\n            uid = new Date;\r\n            storage = storageType === StorageType.LocalStorage ? window.localStorage : window.sessionStorage;\r\n            storage.setItem(uid, uid);\r\n            fail = storage.getItem(uid) != uid;\r\n            storage.removeItem(uid);\r\n            if (fail) {\r\n                storage = null;\r\n            }\r\n        }\r\n        catch (exception) {\r\n            storage = null;\r\n        }\r\n        return storage;\r\n    };\r\n    /**\r\n     *  Checks if endpoint URL is application insights internal injestion service URL.\r\n     *\r\n     *  @param endpointUrl Endpoint URL to check.\r\n     *  @returns {boolean} True if if endpoint URL is application insights internal injestion service URL.\r\n     */\r\n    Util.isInternalApplicationInsightsEndpoint = function (endpointUrl) {\r\n        return Util._internalEndpoints.indexOf(endpointUrl.toLowerCase()) !== -1;\r\n    };\r\n    /**\r\n     *  Check if the browser supports local storage.\r\n     *\r\n     *  @returns {boolean} True if local storage is supported.\r\n     */\r\n    Util.canUseLocalStorage = function () {\r\n        if (Util._canUseLocalStorage === undefined) {\r\n            Util._canUseLocalStorage = !!Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return Util._canUseLocalStorage;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadLocalStorage, \"Browser failed read of local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setStorage = function (logger, name, data) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteLocalStorage, \"Browser failed write to local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromLocalStorage, \"Browser failed removal of local storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Gets the sessionStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getSessionStorageObject = function () {\r\n        if (Util.canUseSessionStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Check if the browser supports session storage.\r\n     *\r\n     *  @returns {boolean} True if session storage is supported.\r\n     */\r\n    Util.canUseSessionStorage = function () {\r\n        if (Util._canUseSessionStorage === undefined) {\r\n            Util._canUseSessionStorage = !!Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return Util._canUseSessionStorage;\r\n    };\r\n    /**\r\n     *  Gets the list of session storage keys\r\n     *\r\n     *  @returns {string[]} List of session storage keys\r\n     */\r\n    Util.getSessionStorageKeys = function () {\r\n        var keys = [];\r\n        if (Util.canUseSessionStorage()) {\r\n            for (var key in window.sessionStorage) {\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadSessionStorage, \"Browser failed read of session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setSessionStorage = function (logger, name, data) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteSessionStorage, \"Browser failed write to session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromSessionStorage, \"Browser failed removal of session storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /*\r\n     * Force the SDK not to store and read any data from cookies\r\n     */\r\n    Util.disableCookies = function () {\r\n        CoreUtils.disableCookies();\r\n    };\r\n    /*\r\n     * helper method to tell if document.cookie object is available\r\n     */\r\n    Util.canUseCookies = function (logger) {\r\n        if (CoreUtils._canUseCookies === undefined) {\r\n            CoreUtils._canUseCookies = false;\r\n            try {\r\n                CoreUtils._canUseCookies = Util.document.cookie !== undefined;\r\n            }\r\n            catch (e) {\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotAccessCookie, \"Cannot access document.cookie - \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n            ;\r\n        }\r\n        return CoreUtils._canUseCookies;\r\n    };\r\n    /**\r\n     * helper method to set userId and sessionId cookie\r\n     */\r\n    Util.setCookie = function (logger, name, value, domain) {\r\n        var domainAttrib = \"\";\r\n        var secureAttrib = \"\";\r\n        if (domain) {\r\n            domainAttrib = \";domain=\" + domain;\r\n        }\r\n        if (Util.document.location && Util.document.location.protocol === \"https:\") {\r\n            secureAttrib = \";secure\";\r\n        }\r\n        if (Util.canUseCookies(logger)) {\r\n            Util.document.cookie = name + \"=\" + value + domainAttrib + \";path=/\" + secureAttrib;\r\n        }\r\n    };\r\n    Util.stringToBoolOrDefault = function (str, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        if (str === undefined || str === null) {\r\n            return defaultValue;\r\n        }\r\n        return str.toString().toLowerCase() === \"true\";\r\n    };\r\n    /**\r\n     * helper method to access userId and sessionId cookie\r\n     */\r\n    Util.getCookie = function (logger, name) {\r\n        if (!Util.canUseCookies(logger)) {\r\n            return;\r\n        }\r\n        var value = \"\";\r\n        if (name && name.length) {\r\n            var cookieName = name + \"=\";\r\n            var cookies = Util.document.cookie.split(\";\");\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i];\r\n                cookie = Util.trim(cookie);\r\n                if (cookie && cookie.indexOf(cookieName) === 0) {\r\n                    value = cookie.substring(cookieName.length, cookies[i].length);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Deletes a cookie by setting it's expiration time in the past.\r\n     * @param name - The name of the cookie to delete.\r\n     */\r\n    Util.deleteCookie = function (logger, name) {\r\n        if (Util.canUseCookies(logger)) {\r\n            // Setting the expiration date in the past immediately removes the cookie\r\n            Util.document.cookie = name + \"=;path=/;expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n        }\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    Util.trim = function (str) {\r\n        if (typeof str !== \"string\")\r\n            return str;\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n     * generate random id string\r\n     */\r\n    Util.newId = function () {\r\n        var base64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n        var result = \"\";\r\n        // tslint:disable-next-line:insecure-random\r\n        var random = Math.random() * 1073741824; //5 symbols in base64, almost maxint\r\n        while (random > 0) {\r\n            var char = base64chars.charAt(random % 64);\r\n            result += char;\r\n            random = Math.floor(random / 64);\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Check if an object is of type Array\r\n     */\r\n    Util.isArray = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Error\r\n     */\r\n    Util.isError = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Error]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Date\r\n     */\r\n    Util.isDate = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Date]\";\r\n    };\r\n    /**\r\n     * Convert a date to I.S.O. format in IE8\r\n     */\r\n    Util.toISOStringForIE8 = function (date) {\r\n        if (Util.isDate(date)) {\r\n            if (Date.prototype.toISOString) {\r\n                return date.toISOString();\r\n            }\r\n            else {\r\n                var pad = function (num) {\r\n                    var r = String(num);\r\n                    if (r.length === 1) {\r\n                        r = \"0\" + r;\r\n                    }\r\n                    return r;\r\n                };\r\n                return date.getUTCFullYear()\r\n                    + \"-\" + pad(date.getUTCMonth() + 1)\r\n                    + \"-\" + pad(date.getUTCDate())\r\n                    + \"T\" + pad(date.getUTCHours())\r\n                    + \":\" + pad(date.getUTCMinutes())\r\n                    + \":\" + pad(date.getUTCSeconds())\r\n                    + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                    + \"Z\";\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets IE version if we are running on IE, or null otherwise\r\n     */\r\n    Util.getIEVersion = function (userAgentStr) {\r\n        if (userAgentStr === void 0) { userAgentStr = null; }\r\n        var myNav = userAgentStr ? userAgentStr.toLowerCase() : navigator.userAgent.toLowerCase();\r\n        return (myNav.indexOf('msie') != -1) ? parseInt(myNav.split('msie')[1]) : null;\r\n    };\r\n    /**\r\n     * Convert ms to c# time span format\r\n     */\r\n    Util.msToTimeSpan = function (totalms) {\r\n        if (isNaN(totalms) || totalms < 0) {\r\n            totalms = 0;\r\n        }\r\n        totalms = Math.round(totalms);\r\n        var ms = \"\" + totalms % 1000;\r\n        var sec = \"\" + Math.floor(totalms / 1000) % 60;\r\n        var min = \"\" + Math.floor(totalms / (1000 * 60)) % 60;\r\n        var hour = \"\" + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n        var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n        ms = ms.length === 1 ? \"00\" + ms : ms.length === 2 ? \"0\" + ms : ms;\r\n        sec = sec.length < 2 ? \"0\" + sec : sec;\r\n        min = min.length < 2 ? \"0\" + min : min;\r\n        hour = hour.length < 2 ? \"0\" + hour : hour;\r\n        return (days > 0 ? days + \".\" : \"\") + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n    };\r\n    /**\r\n    * Checks if error has no meaningful data inside. Ususally such errors are received by window.onerror when error\r\n    * happens in a script from other domain (cross origin, CORS).\r\n    */\r\n    Util.isCrossOriginError = function (message, url, lineNumber, columnNumber, error) {\r\n        return (message === \"Script error.\" || message === \"Script error\") && !error;\r\n    };\r\n    /**\r\n    * Returns string representation of an object suitable for diagnostics logging.\r\n    */\r\n    Util.dump = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        var propertyValueDump = JSON.stringify(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            propertyValueDump = \"{ stack: '\" + object.stack + \"', message: '\" + object.message + \"', name: '\" + object.name + \"'\";\r\n        }\r\n        return objectTypeDump + propertyValueDump;\r\n    };\r\n    /**\r\n    * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n    */\r\n    Util.getExceptionName = function (object) {\r\n        var objectTypeDump = Object.prototype.toString.call(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            return object.name;\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Adds an event handler for the specified event\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    Util.addEventHandler = function (eventName, callback) {\r\n        if (typeof window === 'undefined' || !window || typeof eventName !== 'string' || typeof callback !== 'function') {\r\n            return false;\r\n        }\r\n        // Create verb for the event\r\n        var verbEventName = 'on' + eventName;\r\n        // check if addEventListener is available\r\n        if (window.addEventListener) {\r\n            window.addEventListener(eventName, callback, false);\r\n        }\r\n        else if (window[\"attachEvent\"]) {\r\n            window[\"attachEvent\"](verbEventName, callback);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Tells if a browser supports a Beacon API\r\n     */\r\n    Util.IsBeaconApiSupported = function () {\r\n        return ('sendBeacon' in navigator && navigator.sendBeacon);\r\n    };\r\n    Util.getExtension = function (extensions, identifier) {\r\n        var extension = null;\r\n        var extIx = 0;\r\n        while (!extension && extIx < extensions.length) {\r\n            if (extensions[extIx] && extensions[extIx].identifier === identifier) {\r\n                extension = extensions[extIx];\r\n            }\r\n            extIx++;\r\n        }\r\n        return extension;\r\n    };\r\n    Util.document = typeof document !== \"undefined\" ? document : {};\r\n    Util._canUseLocalStorage = undefined;\r\n    Util._canUseSessionStorage = undefined;\r\n    // listing only non-geo specific locations\r\n    Util._internalEndpoints = [\r\n        \"https://dc.services.visualstudio.com/v2/track\",\r\n        \"https://breeze.aimon.applicationinsights.io/v2/track\",\r\n        \"https://dc-int.services.visualstudio.com/v2/track\"\r\n    ];\r\n    Util.NotSpecified = \"not_specified\";\r\n    return Util;\r\n}());\r\nexport { Util };\r\nvar UrlHelper = /** @class */ (function () {\r\n    function UrlHelper() {\r\n    }\r\n    UrlHelper.parseUrl = function (url) {\r\n        if (!UrlHelper.htmlAnchorElement) {\r\n            UrlHelper.htmlAnchorElement = !!UrlHelper.document.createElement ? UrlHelper.document.createElement('a') : { host: UrlHelper.parseHost(url) }; // fill host field in the fallback case as that is the only externally required field from this fn\r\n        }\r\n        UrlHelper.htmlAnchorElement.href = url;\r\n        return UrlHelper.htmlAnchorElement;\r\n    };\r\n    UrlHelper.getAbsoluteUrl = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.href;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getPathName = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.pathname;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getCompleteUrl = function (method, absoluteUrl) {\r\n        if (method) {\r\n            return method.toUpperCase() + \" \" + absoluteUrl;\r\n        }\r\n        else {\r\n            return absoluteUrl;\r\n        }\r\n    };\r\n    // Fallback method to grab host from url if document.createElement method is not available\r\n    UrlHelper.parseHost = function (url) {\r\n        var match = url.match(/:\\/\\/(www[0-9]?\\.)?(.[^/:]+)/i);\r\n        if (match != null && match.length > 2 && typeof match[2] === 'string' && match[2].length > 0) {\r\n            return match[2];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    UrlHelper.document = typeof document !== \"undefined\" ? document : {};\r\n    return UrlHelper;\r\n}());\r\nexport { UrlHelper };\r\nvar CorrelationIdHelper = /** @class */ (function () {\r\n    function CorrelationIdHelper() {\r\n    }\r\n    /**\r\n    * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers\r\n    */\r\n    CorrelationIdHelper.canIncludeCorrelationHeader = function (config, requestUrl, currentHost) {\r\n        if (config && config.disableCorrelationHeaders) {\r\n            return false;\r\n        }\r\n        if (!requestUrl) {\r\n            return false;\r\n        }\r\n        var requestHost = UrlHelper.parseUrl(requestUrl).host.toLowerCase();\r\n        if ((!config || !config.enableCorsCorrelation) && requestHost !== currentHost) {\r\n            return false;\r\n        }\r\n        var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n        if (!excludedDomains || excludedDomains.length == 0) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < excludedDomains.length; i++) {\r\n            var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n            if (regex.test(requestHost)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n    * Combines target appId and target role name from response header.\r\n    */\r\n    CorrelationIdHelper.getCorrelationContext = function (responseHeader) {\r\n        if (responseHeader) {\r\n            var correlationId = CorrelationIdHelper.getCorrelationContextValue(responseHeader, RequestHeaders.requestContextTargetKey);\r\n            if (correlationId && correlationId !== CorrelationIdHelper.correlationIdPrefix) {\r\n                return correlationId;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n    * Gets key from correlation response header\r\n    */\r\n    CorrelationIdHelper.getCorrelationContextValue = function (responseHeader, key) {\r\n        if (responseHeader) {\r\n            var keyValues = responseHeader.split(\",\");\r\n            for (var i = 0; i < keyValues.length; ++i) {\r\n                var keyValue = keyValues[i].split(\"=\");\r\n                if (keyValue.length == 2 && keyValue[0] == key) {\r\n                    return keyValue[1];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    CorrelationIdHelper.correlationIdPrefix = \"cid-v1:\";\r\n    return CorrelationIdHelper;\r\n}());\r\nexport { CorrelationIdHelper };\r\nvar AjaxHelper = /** @class */ (function () {\r\n    function AjaxHelper() {\r\n    }\r\n    AjaxHelper.ParseDependencyPath = function (logger, absoluteUrl, method, commandName) {\r\n        var target, name = commandName, data = commandName;\r\n        if (absoluteUrl && absoluteUrl.length > 0) {\r\n            var parsedUrl = UrlHelper.parseUrl(absoluteUrl);\r\n            target = parsedUrl.host;\r\n            if (!name) {\r\n                if (parsedUrl.pathname != null) {\r\n                    var pathName = (parsedUrl.pathname.length === 0) ? \"/\" : parsedUrl.pathname;\r\n                    if (pathName.charAt(0) !== '/') {\r\n                        pathName = \"/\" + pathName;\r\n                    }\r\n                    data = parsedUrl.pathname;\r\n                    name = DataSanitizer.sanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n                }\r\n                else {\r\n                    name = DataSanitizer.sanitizeString(logger, absoluteUrl);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            target = commandName;\r\n            name = commandName;\r\n        }\r\n        return {\r\n            target: target,\r\n            name: name,\r\n            data: data\r\n        };\r\n    };\r\n    return AjaxHelper;\r\n}());\r\nexport { AjaxHelper };\r\n/**\r\n * A utility class that helps getting time related parameters\r\n */\r\nvar DateTimeUtils = /** @class */ (function () {\r\n    function DateTimeUtils() {\r\n    }\r\n    /**\r\n     * Get the number of milliseconds since 1970/01/01 in local timezone\r\n     */\r\n    DateTimeUtils.Now = (typeof window === 'undefined') ? function () { return new Date().getTime(); } :\r\n        (window.performance && window.performance.now && window.performance.timing) ?\r\n            function () {\r\n                return window.performance.now() + window.performance.timing.navigationStart;\r\n            }\r\n            :\r\n                function () {\r\n                    return new Date().getTime();\r\n                };\r\n    /**\r\n     * Gets duration between two timestamps\r\n     */\r\n    DateTimeUtils.GetDuration = function (start, end) {\r\n        var result = null;\r\n        if (start !== 0 && end !== 0 && !CoreUtils.isNullOrUndefined(start) && !CoreUtils.isNullOrUndefined(end)) {\r\n            result = end - start;\r\n        }\r\n        return result;\r\n    };\r\n    return DateTimeUtils;\r\n}());\r\nexport { DateTimeUtils };\r\n//# sourceMappingURL=Util.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Type of the metric data measurement.\r\n */\r\nexport var DataPointType;\r\n(function (DataPointType) {\r\n    DataPointType[DataPointType[\"Measurement\"] = 0] = \"Measurement\";\r\n    DataPointType[DataPointType[\"Aggregation\"] = 1] = \"Aggregation\";\r\n})(DataPointType || (DataPointType = {}));\r\n//# sourceMappingURL=DataPointType.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n     * Data struct to contain only C section with custom fields.\r\n     */\r\nvar Base = /** @class */ (function () {\r\n    function Base() {\r\n    }\r\n    return Base;\r\n}());\r\nexport { Base };\r\n//# sourceMappingURL=Base.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Base } from './Base';\r\n/**\r\n * Data struct to contain both B and C sections.\r\n */\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    function Data() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return Data;\r\n}(Base));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * System variables for a telemetry item.\r\n */\r\nvar Envelope = /** @class */ (function () {\r\n    function Envelope() {\r\n        this.ver = 1;\r\n        this.sampleRate = 100.0;\r\n        this.tags = {};\r\n    }\r\n    return Envelope;\r\n}());\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Envelope as AIEnvelope } from '../../Interfaces/Contracts/Generated/Envelope';\r\nimport { DataSanitizer } from './DataSanitizer';\r\nimport { FieldType } from '../../Enums';\r\nimport { Util } from '../../Util';\r\nvar Envelope = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Envelope, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Envelope(logger, data, name) {\r\n        var _this = _super.call(this) || this;\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.data = data;\r\n        _this.time = Util.toISOStringForIE8(new Date());\r\n        _this.aiDataContract = {\r\n            time: FieldType.Required,\r\n            iKey: FieldType.Required,\r\n            name: FieldType.Required,\r\n            sampleRate: function () {\r\n                return (_this.sampleRate == 100) ? FieldType.Hidden : FieldType.Required;\r\n            },\r\n            tags: FieldType.Required,\r\n            data: FieldType.Required\r\n        };\r\n        return _this;\r\n    }\r\n    return Envelope;\r\n}(AIEnvelope));\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * The abstract common base of all domains.\r\n */\r\nvar Domain = /** @class */ (function () {\r\n    function Domain() {\r\n    }\r\n    return Domain;\r\n}());\r\nexport { Domain };\r\n//# sourceMappingURL=Domain.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.\r\n */\r\nvar EventData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(EventData, _super);\r\n    function EventData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return EventData;\r\n}(Domain));\r\nexport { EventData };\r\n//# sourceMappingURL=EventData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { EventData } from '../Interfaces/Contracts/Generated/EventData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Event = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Event, _super);\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Required,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n    Event.dataType = \"EventData\";\r\n    return Event;\r\n}(EventData));\r\nexport { Event };\r\n//# sourceMappingURL=Event.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Stack frame information.\r\n */\r\nvar StackFrame = /** @class */ (function () {\r\n    function StackFrame() {\r\n    }\r\n    return StackFrame;\r\n}());\r\nexport { StackFrame };\r\n//# sourceMappingURL=StackFrame.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Exception represents a handled or unhandled exception that occurred during execution of the monitored application.\r\n */\r\nvar ExceptionData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ExceptionData, _super);\r\n    function ExceptionData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.exceptions = [];\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return ExceptionData;\r\n}(Domain));\r\nexport { ExceptionData };\r\n//# sourceMappingURL=ExceptionData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * Exception details of the exception in a chain.\r\n */\r\nvar ExceptionDetails = /** @class */ (function () {\r\n    function ExceptionDetails() {\r\n        this.hasFullStack = true;\r\n        this.parsedStack = [];\r\n    }\r\n    return ExceptionDetails;\r\n}());\r\nexport { ExceptionDetails };\r\n//# sourceMappingURL=ExceptionDetails.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { StackFrame } from '../Interfaces/Contracts/Generated/StackFrame';\r\nimport { ExceptionData } from '../Interfaces/Contracts/Generated/ExceptionData';\r\nimport { ExceptionDetails } from '../Interfaces/Contracts/Generated/ExceptionDetails';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Exception = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Exception, _super);\r\n    /**\r\n    * Constructs a new instance of the ExceptionTelemetry object\r\n    */\r\n    function Exception(logger, exception, properties, measurements, severityLevel) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            exceptions: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        if (exception instanceof Error) {\r\n            _this.exceptions = [new _ExceptionDetails(logger, exception)];\r\n            _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n            _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n            if (severityLevel) {\r\n                _this.severityLevel = severityLevel;\r\n            }\r\n        }\r\n        else {\r\n            _this.exceptions = exception.exceptions;\r\n            _this.properties = exception.properties;\r\n            _this.measurements = exception.measurements;\r\n            if (exception.severityLevel) {\r\n                _this.severityLevel = exception.severityLevel;\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    Exception.CreateFromInterface = function (logger, exception) {\r\n        var exceptions = exception.exceptions\r\n            && exception.exceptions.map(function (ex) { return _ExceptionDetails.CreateFromInterface(logger, ex); });\r\n        var exceptionData = new Exception(logger, tslib_1.__assign({}, exception, { exceptions: exceptions }));\r\n        // if (exceptions) {\r\n        //     exceptionData.exceptions = exceptions;\r\n        // }\r\n        return exceptionData;\r\n    };\r\n    Exception.prototype.toInterface = function () {\r\n        var _a = this, exceptions = _a.exceptions, properties = _a.properties, measurements = _a.measurements, severityLevel = _a.severityLevel, ver = _a.ver;\r\n        var exceptionDetailsInterface = exceptions instanceof Array\r\n            && exceptions.map(function (exception) { return exception.toInterface(); })\r\n            || undefined;\r\n        return {\r\n            ver: ver,\r\n            exceptions: exceptionDetailsInterface,\r\n            severityLevel: severityLevel,\r\n            properties: properties,\r\n            measurements: measurements,\r\n            problemGroup: undefined,\r\n            id: null,\r\n            isManual: null\r\n        };\r\n    };\r\n    /**\r\n    * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n    */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        return {\r\n            exceptions: [\r\n                {\r\n                    hasFullStack: true,\r\n                    message: message,\r\n                    stack: details,\r\n                    typeName: typeName\r\n                }\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n    Exception.dataType = \"ExceptionData\";\r\n    return Exception;\r\n}(ExceptionData));\r\nexport { Exception };\r\nvar _ExceptionDetails = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_ExceptionDetails, _super);\r\n    function _ExceptionDetails(logger, exception) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Default,\r\n            outerId: FieldType.Default,\r\n            typeName: FieldType.Required,\r\n            message: FieldType.Required,\r\n            hasFullStack: FieldType.Default,\r\n            stack: FieldType.Default,\r\n            parsedStack: FieldType.Array\r\n        };\r\n        if (exception instanceof Error) {\r\n            _this.typeName = DataSanitizer.sanitizeString(logger, exception.name) || Util.NotSpecified;\r\n            _this.message = DataSanitizer.sanitizeMessage(logger, exception.message) || Util.NotSpecified;\r\n            var stack = exception.stack;\r\n            _this.parsedStack = _ExceptionDetails.parseStack(stack);\r\n            _this.stack = DataSanitizer.sanitizeException(logger, stack);\r\n            _this.hasFullStack = Util.isArray(_this.parsedStack) && _this.parsedStack.length > 0;\r\n        }\r\n        else {\r\n            _this.typeName = exception.typeName;\r\n            _this.message = exception.message;\r\n            _this.stack = exception.stack;\r\n            _this.parsedStack = exception.parsedStack;\r\n            _this.hasFullStack = exception.hasFullStack;\r\n        }\r\n        return _this;\r\n    }\r\n    _ExceptionDetails.prototype.toInterface = function () {\r\n        var parsedStack = this.parsedStack instanceof Array\r\n            && this.parsedStack.map(function (frame) { return frame.toInterface(); });\r\n        var exceptionDetailsInterface = {\r\n            id: this.id,\r\n            outerId: this.outerId,\r\n            typeName: this.typeName,\r\n            message: this.message,\r\n            hasFullStack: this.hasFullStack,\r\n            stack: this.stack,\r\n            parsedStack: parsedStack || undefined\r\n        };\r\n        return exceptionDetailsInterface;\r\n    };\r\n    _ExceptionDetails.CreateFromInterface = function (logger, exception) {\r\n        var parsedStack = (exception.parsedStack instanceof Array\r\n            && exception.parsedStack.map(function (frame) { return _StackFrame.CreateFromInterface(frame); }))\r\n            || exception.parsedStack;\r\n        var exceptionDetails = new _ExceptionDetails(logger, tslib_1.__assign({}, exception, { parsedStack: parsedStack }));\r\n        return exceptionDetails;\r\n    };\r\n    _ExceptionDetails.parseStack = function (stack) {\r\n        var parsedStack = undefined;\r\n        if (typeof stack === \"string\") {\r\n            var frames = stack.split('\\n');\r\n            parsedStack = [];\r\n            var level = 0;\r\n            var totalSizeInBytes = 0;\r\n            for (var i = 0; i <= frames.length; i++) {\r\n                var frame = frames[i];\r\n                if (_StackFrame.regex.test(frame)) {\r\n                    var parsedFrame = new _StackFrame(frames[i], level++);\r\n                    totalSizeInBytes += parsedFrame.sizeInBytes;\r\n                    parsedStack.push(parsedFrame);\r\n                }\r\n            }\r\n            // DP Constraint - exception parsed stack must be < 32KB\r\n            // remove frames from the middle to meet the threshold\r\n            var exceptionParsedStackThreshold = 32 * 1024;\r\n            if (totalSizeInBytes > exceptionParsedStackThreshold) {\r\n                var left = 0;\r\n                var right = parsedStack.length - 1;\r\n                var size = 0;\r\n                var acceptedLeft = left;\r\n                var acceptedRight = right;\r\n                while (left < right) {\r\n                    // check size\r\n                    var lSize = parsedStack[left].sizeInBytes;\r\n                    var rSize = parsedStack[right].sizeInBytes;\r\n                    size += lSize + rSize;\r\n                    if (size > exceptionParsedStackThreshold) {\r\n                        // remove extra frames from the middle\r\n                        var howMany = acceptedRight - acceptedLeft + 1;\r\n                        parsedStack.splice(acceptedLeft, howMany);\r\n                        break;\r\n                    }\r\n                    // update pointers\r\n                    acceptedLeft = left;\r\n                    acceptedRight = right;\r\n                    left++;\r\n                    right--;\r\n                }\r\n            }\r\n        }\r\n        return parsedStack;\r\n    };\r\n    return _ExceptionDetails;\r\n}(ExceptionDetails));\r\nexport { _ExceptionDetails };\r\nvar _StackFrame = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_StackFrame, _super);\r\n    function _StackFrame(sourceFrame, level) {\r\n        var _this = _super.call(this) || this;\r\n        _this.sizeInBytes = 0;\r\n        _this.aiDataContract = {\r\n            level: FieldType.Required,\r\n            method: FieldType.Required,\r\n            assembly: FieldType.Default,\r\n            fileName: FieldType.Default,\r\n            line: FieldType.Default,\r\n        };\r\n        if (typeof sourceFrame === \"string\") {\r\n            var frame = sourceFrame;\r\n            _this.level = level;\r\n            _this.method = \"<no_method>\";\r\n            _this.assembly = Util.trim(frame);\r\n            _this.fileName = \"\";\r\n            _this.line = 0;\r\n            var matches = frame.match(_StackFrame.regex);\r\n            if (matches && matches.length >= 5) {\r\n                _this.method = Util.trim(matches[2]) || _this.method;\r\n                _this.fileName = Util.trim(matches[4]);\r\n                _this.line = parseInt(matches[5]) || 0;\r\n            }\r\n        }\r\n        else {\r\n            _this.level = sourceFrame.level;\r\n            _this.method = sourceFrame.method;\r\n            _this.assembly = sourceFrame.assembly;\r\n            _this.fileName = sourceFrame.fileName;\r\n            _this.line = sourceFrame.line;\r\n            _this.sizeInBytes = 0;\r\n        }\r\n        _this.sizeInBytes += _this.method.length;\r\n        _this.sizeInBytes += _this.fileName.length;\r\n        _this.sizeInBytes += _this.assembly.length;\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _this.sizeInBytes += _StackFrame.baseSize;\r\n        _this.sizeInBytes += _this.level.toString().length;\r\n        _this.sizeInBytes += _this.line.toString().length;\r\n        return _this;\r\n    }\r\n    _StackFrame.CreateFromInterface = function (frame) {\r\n        return new _StackFrame(frame, null /* level is available in frame interface */);\r\n    };\r\n    _StackFrame.prototype.toInterface = function () {\r\n        return {\r\n            level: this.level,\r\n            method: this.method,\r\n            assembly: this.assembly,\r\n            fileName: this.fileName,\r\n            line: this.line\r\n        };\r\n    };\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?(.*?)(\\@|\\s\\(|\\s)([^\\(\\@\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; //'{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}(StackFrame));\r\nexport { _StackFrame };\r\n//# sourceMappingURL=Exception.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of the Metric item is a list of measurements (single data points) and/or aggregations.\r\n */\r\nvar MetricData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MetricData, _super);\r\n    function MetricData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.metrics = [];\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MetricData;\r\n}(Domain));\r\nexport { MetricData };\r\n//# sourceMappingURL=MetricData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { DataPointType } from './DataPointType';\r\n/**\r\n * Metric data single measurement.\r\n */\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        this.kind = DataPointType.Measurement;\r\n    }\r\n    return DataPoint;\r\n}());\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n* Defines the level of severity for the event.\r\n*/\r\nexport var SeverityLevel;\r\n(function (SeverityLevel) {\r\n    SeverityLevel[SeverityLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    SeverityLevel[SeverityLevel[\"Information\"] = 1] = \"Information\";\r\n    SeverityLevel[SeverityLevel[\"Warning\"] = 2] = \"Warning\";\r\n    SeverityLevel[SeverityLevel[\"Error\"] = 3] = \"Error\";\r\n    SeverityLevel[SeverityLevel[\"Critical\"] = 4] = \"Critical\";\r\n})(SeverityLevel || (SeverityLevel = {}));\r\n//# sourceMappingURL=SeverityLevel.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataPoint as AIDataPoint } from '../../Interfaces/Contracts/Generated/DataPoint';\r\nimport { FieldType } from '../../Enums';\r\nvar DataPoint = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DataPoint, _super);\r\n    function DataPoint() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            name: FieldType.Required,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Required,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default\r\n        };\r\n        return _this;\r\n    }\r\n    return DataPoint;\r\n}(AIDataPoint));\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MetricData } from '../Interfaces/Contracts/Generated/MetricData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { DataPoint } from './Common/DataPoint';\r\nimport { Util } from '../Util';\r\nvar Metric = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Metric, _super);\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            metrics: FieldType.Required,\r\n            properties: FieldType.Default\r\n        };\r\n        var dataPoint = new DataPoint();\r\n        dataPoint.count = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        dataPoint.value = value;\r\n        _this.metrics = [dataPoint];\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        return _this;\r\n    }\r\n    Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n    Metric.dataType = \"MetricData\";\r\n    return Metric;\r\n}(MetricData));\r\nexport { Metric };\r\n//# sourceMappingURL=Metric.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { EventData } from './EventData';\r\n/**\r\n * An instance of PageView represents a generic action on a page like a button click. It is also the base type for PageView.\r\n */\r\nvar PageViewData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewData, _super);\r\n    function PageViewData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewData;\r\n}(EventData));\r\nexport { PageViewData };\r\n//# sourceMappingURL=PageViewData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewData } from '../Interfaces/Contracts/Generated/PageViewData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar PageView = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageView, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            id: FieldType.Default\r\n        };\r\n        _this.id = DataSanitizer.sanitizeId(logger, id);\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _this.duration = Util.msToTimeSpan(durationMs);\r\n        }\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}(PageViewData));\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Remote Dependency represents an interaction of the monitored component with a remote component/service like SQL or an HTTP endpoint.\r\n */\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    function RemoteDependencyData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.success = true;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return RemoteDependencyData;\r\n}(Domain));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nimport { AjaxHelper } from '../Util';\r\nimport { RemoteDependencyData as GeneratedRemoteDependencyData } from '../Interfaces/Contracts/Generated/RemoteDependencyData';\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = \"Ajax\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Required,\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            resultCode: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            success: FieldType.Default,\r\n            data: FieldType.Default,\r\n            target: FieldType.Default,\r\n            type: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Default,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default,\r\n            dependencyKind: FieldType.Default,\r\n            dependencySource: FieldType.Default,\r\n            commandName: FieldType.Default,\r\n            dependencyTypeName: FieldType.Default,\r\n        };\r\n        _this.id = id;\r\n        _this.duration = Util.msToTimeSpan(value);\r\n        _this.success = success;\r\n        _this.resultCode = resultCode + \"\";\r\n        _this.type = DataSanitizer.sanitizeString(logger, requestAPI);\r\n        var dependencyFields = AjaxHelper.ParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _this.data = DataSanitizer.sanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _this.target = dependencyFields.target;\r\n        _this.name = dependencyFields.name;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n    RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n    return RemoteDependencyData;\r\n}(GeneratedRemoteDependencyData));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Message represent printf-like trace statements that are text-searched. Log4Net, NLog and other text-based log file entries are translated into intances of this type. The message does not have measurements.\r\n */\r\nvar MessageData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MessageData, _super);\r\n    function MessageData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MessageData;\r\n}(Domain));\r\nexport { MessageData };\r\n//# sourceMappingURL=MessageData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MessageData } from '../Interfaces/Contracts/Generated/MessageData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Trace = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Trace, _super);\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            message: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default\r\n        };\r\n        message = message || Util.NotSpecified;\r\n        _this.message = DataSanitizer.sanitizeMessage(logger, message);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        if (severityLevel) {\r\n            _this.severityLevel = severityLevel;\r\n        }\r\n        return _this;\r\n    }\r\n    Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n    Trace.dataType = \"MessageData\";\r\n    return Trace;\r\n}(MessageData));\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { PageViewData } from './PageViewData';\r\n/**\r\n * An instance of PageViewPerf represents: a page view with no performance data, a page view with performance data, or just the performance data of an earlier page request.\r\n */\r\nvar PageViewPerfData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerfData, _super);\r\n    function PageViewPerfData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewPerfData;\r\n}(PageViewData));\r\nexport { PageViewPerfData };\r\n//# sourceMappingURL=PageViewPerfData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewPerfData } from '../Interfaces/Contracts/Generated/PageViewPerfData';\r\nimport { FieldType } from '../Enums';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { Util } from '../Util';\r\nvar PageViewPerformance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerformance, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            perfTotal: FieldType.Default,\r\n            networkConnect: FieldType.Default,\r\n            sentRequest: FieldType.Default,\r\n            receivedResponse: FieldType.Default,\r\n            domProcessing: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n    return PageViewPerformance;\r\n}(PageViewPerfData));\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Data as AIData } from '../../Interfaces/Contracts/Generated/Data';\r\nimport { FieldType } from '../../Enums';\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Data(baseType, data) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            baseType: FieldType.Required,\r\n            baseData: FieldType.Required\r\n        };\r\n        _this.baseType = baseType;\r\n        _this.baseData = data;\r\n        return _this;\r\n    }\r\n    return Data;\r\n}(AIData));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport { Util, CorrelationIdHelper, UrlHelper, DateTimeUtils } from './Util';\r\nexport { FieldType } from './Enums';\r\nexport { RequestHeaders } from './RequestResponseHeaders';\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod } from './Constants';\r\nexport { Data as AIData } from './Interfaces/Contracts/Generated/Data';\r\nexport { Base as AIBase } from './Interfaces/Contracts/Generated/Base';\r\nexport { Envelope } from './Telemetry/Common/Envelope';\r\nexport { Event } from './Telemetry/Event';\r\nexport { Exception } from './Telemetry/Exception';\r\nexport { Metric } from './Telemetry/Metric';\r\nexport { PageView } from './Telemetry/PageView';\r\nexport { PageViewData } from './Interfaces/Contracts/Generated/PageViewData';\r\nexport { RemoteDependencyData } from './Telemetry/RemoteDependencyData';\r\nexport { Trace } from './Telemetry/Trace';\r\nexport { PageViewPerformance } from './Telemetry/PageViewPerformance';\r\nexport { Data } from './Telemetry/Common/Data';\r\nexport { SeverityLevel } from './Interfaces/Contracts/Generated/SeverityLevel';\r\nexport { ConfigurationManager } from './Interfaces/IConfig';\r\nexport { ContextTagKeys } from './Interfaces/Contracts/Generated/ContextTagKeys';\r\nexport { DataSanitizer } from './Telemetry/Common/DataSanitizer';\r\nexport { TelemetryItemCreator } from './TelemetryItemCreator';\r\nexport { CtxTagKeys, Extensions, SDKExtensionKeys } from './Interfaces/PartAExtensions';\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\nexport var BreezeChannelIdentifier = \"AppInsightsChannelPlugin\";\r\n//# sourceMappingURL=applicationinsights-common.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { PropertiesPluginIdentifier } from \"@microsoft/applicationinsights-common\";\n/**\n * Module to include Microsoft Application Insights in React applications.\n *\n * @export\n * @class ReactAI\n */\nvar ReactAI = /** @class */ (function () {\n    function ReactAI() {\n        this.extensionId = \"ApplicationInsightsReactUsage\";\n        this.ApplicationInsightsAnalyticsIdentifier = \"ApplicationInsightsAnalytics\";\n        this.identifier = this.extensionId;\n        this.priority = 190;\n        this.contextProps = {};\n        this.debug = false;\n        this.processTelemetry = this.customDimensionsInitializer.bind(this);\n    }\n    ReactAI.prototype.setNextPlugin = function (plugin) {\n        this.nextPlugin = plugin;\n    };\n    Object.defineProperty(ReactAI.prototype, \"context\", {\n        /**\n         * Returns the current value of context/custom dimensions.\n         *\n         * @readonly\n         * @type {{ [key: string]: any }}\n         * @memberof ReactAI\n         */\n        get: function () {\n            return this.contextProps || {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ReactAI.prototype, \"isDebugMode\", {\n        /**\n         * Returns if ReactAI is in debug mode.\n         *\n         * @readonly\n         * @type {boolean}\n         * @memberof ReactAI\n         */\n        get: function () {\n            return this.debug;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Initializes a singleton instance of ReactAI based on supplied parameters.\n     *\n     * @param {IReactAISettings} settings\n     * @memberof ReactAI\n     */\n    ReactAI.prototype.initialize = function (settings, core, extensions) {\n        var _this = this;\n        var reactAISettings = settings.extensionConfig && settings.extensionConfig[this.identifier]\n            ? settings.extensionConfig[this.identifier]\n            : { debug: false };\n        this.debug = reactAISettings.debug || false;\n        this.setContext(reactAISettings.initialContext || {}, true);\n        extensions.forEach(function (ext) {\n            var identifier = ext.identifier;\n            if (identifier === _this.ApplicationInsightsAnalyticsIdentifier) {\n                _this.appInsights = ext;\n            }\n            if (identifier === PropertiesPluginIdentifier) {\n                _this.propertiesPlugin = ext;\n            }\n        });\n        if (reactAISettings.history) {\n            this.addHistoryListener(reactAISettings.history);\n            var pageViewTelemetry = {\n                uri: reactAISettings.history.location.pathname,\n                properties: this.context\n            };\n            this._trackInitialPageViewInternal(pageViewTelemetry);\n        }\n    };\n    // internal only, public method for testing\n    ReactAI.prototype._trackInitialPageViewInternal = function (telemetry) {\n        // Record initial page view, since history.listen is not fired for the initial page\n        // (see: https://github.com/ReactTraining/history/issues/479#issuecomment-307544999 )\n        this.appInsights.trackPageView(telemetry);\n        this.debugLog(\"recording initial page view.\", \"uri: \" + location.pathname);\n    };\n    /**\n     * Set custom context/custom dimensions for Application Insights\n     *\n     * @param {{ [key: string]: any }} properties - custom properties to add to all outbound Application Insights telemetry\n     * @param {boolean} [clearPrevious=false] - if false(default) multiple calls to setContext will append to/overwrite existing custom dimensions, if true the values are reset\n     * @memberof ReactAI\n     */\n    ReactAI.prototype.setContext = function (properties, clearPrevious) {\n        if (clearPrevious === void 0) { clearPrevious = false; }\n        if (clearPrevious) {\n            this.contextProps = {};\n            this.debugLog(\"context is reset.\");\n        }\n        properties = properties || {};\n        for (var key in properties) {\n            if (properties.hasOwnProperty(key)) {\n                this.contextProps[key] = properties[key];\n            }\n        }\n        this.debugLog(\"context is set to:\", this.context);\n    };\n    ReactAI.prototype.customDimensionsInitializer = function (envelope) {\n        envelope.baseData = envelope.baseData || {};\n        envelope.baseData.properties = envelope.baseData.properties || {};\n        var properties = envelope.baseData.properties;\n        var props = this.context;\n        for (var key in props) {\n            if (props.hasOwnProperty(key)) {\n                properties[key] = props[key];\n            }\n        }\n        if (this.nextPlugin != null) {\n            this.nextPlugin.processTelemetry(envelope);\n        }\n    };\n    ReactAI.prototype.addHistoryListener = function (history) {\n        var _this = this;\n        history.listen(function (location, action) {\n            // Timeout to ensure any changes to the DOM made by route changes get included in pageView telemetry\n            setTimeout(function () {\n                var pageViewTelemetry = { uri: location.pathname, properties: _this.context };\n                _this.appInsights.trackPageView(pageViewTelemetry);\n                _this.debugLog(\"recording page view.\", \"uri: \" + location.pathname + \" action: \" + action);\n            }, 500);\n        });\n    };\n    ReactAI.prototype.debugLog = function (message, payload) {\n        if (this.isDebugMode) {\n            console.log(\"ReactAI: \" + message, payload === undefined ? \"\" : payload);\n        }\n    };\n    return ReactAI;\n}());\nexport var reactAI = new ReactAI();\n//# sourceMappingURL=ReactAI.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport * as tslib_1 from \"tslib\";\nimport * as React from \"react\";\nimport { reactAI } from \"./ReactAI\";\n/**\n * Higher-order component function to hook Application Insights tracking\n * in a React component's lifecycle.\n *\n * @param Component the component to be instrumented with Application Insights tracking\n * @param componentName (optional) component name\n */\nexport default function withAITracking(Component, componentName) {\n    if (componentName === undefined || componentName === null || typeof componentName !== 'string') {\n        componentName = Component.prototype.constructor.name;\n    }\n    return /** @class */ (function (_super) {\n        tslib_1.__extends(class_1, _super);\n        function class_1() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.mountTimestamp = 0;\n            _this.firstActiveTimestamp = 0;\n            _this.idleStartTimestamp = 0;\n            _this.lastActiveTimestamp = 0;\n            _this.totalIdleTime = 0;\n            _this.idleCount = 0;\n            _this.idleTimeout = 5000;\n            _this.trackActivity = function (e) {\n                if (_this.firstActiveTimestamp === 0) {\n                    _this.firstActiveTimestamp = Date.now();\n                    _this.lastActiveTimestamp = _this.firstActiveTimestamp;\n                }\n                else {\n                    _this.lastActiveTimestamp = Date.now();\n                }\n                if (_this.idleStartTimestamp > 0) {\n                    var lastIdleTime = _this.lastActiveTimestamp - _this.idleStartTimestamp;\n                    _this.totalIdleTime += lastIdleTime;\n                    _this.debugLog(\"trackActivity\", \"Idle to active added \" + lastIdleTime / 1000 + \" seconds of idle time.\");\n                    _this.idleStartTimestamp = 0;\n                }\n            };\n            return _this;\n        }\n        class_1.prototype.componentDidMount = function () {\n            var _this = this;\n            this.mountTimestamp = Date.now();\n            this.firstActiveTimestamp = 0;\n            this.totalIdleTime = 0;\n            this.lastActiveTimestamp = 0;\n            this.idleStartTimestamp = 0;\n            this.idleCount = 0;\n            this.intervalId = setInterval(function () {\n                if (_this.lastActiveTimestamp > 0 && _this.idleStartTimestamp === 0 && Date.now() - _this.lastActiveTimestamp >= _this.idleTimeout) {\n                    _this.idleStartTimestamp = Date.now();\n                    _this.idleCount++;\n                    _this.debugLog(\"componentDidMount\", \"Starting idle time.\");\n                }\n            }, 100);\n        };\n        class_1.prototype.componentWillUnmount = function () {\n            if (this.mountTimestamp === 0) {\n                throw new Error(\"withAITracking:componentWillUnmount: mountTimestamp isn't initialized.\");\n            }\n            if (!reactAI.appInsights) {\n                throw new Error(\"withAITracking:componentWillUnmount: ReactAI isn't initialized.\");\n            }\n            if (this.intervalId) {\n                clearInterval(this.intervalId);\n            }\n            if (this.firstActiveTimestamp === 0) {\n                this.debugLog(\"componentWillUnmount\", \"Nothing to track.\");\n                return;\n            }\n            var engagementTime = this.getEngagementTimeSeconds();\n            var metricData = {\n                average: engagementTime,\n                name: \"React Component Engaged Time (seconds)\",\n                sampleCount: 1\n            };\n            var additionalProperties = { \"Component Name\": componentName };\n            this.debugLog(\"componentWillUnmount\", \"Tracking \" + engagementTime + \" seconds of engagement time for \" + componentName + \".\");\n            reactAI.appInsights.trackMetric(metricData, additionalProperties);\n        };\n        class_1.prototype.render = function () {\n            return (React.createElement(\"div\", { onKeyDown: this.trackActivity, onMouseMove: this.trackActivity, onScroll: this.trackActivity, onMouseDown: this.trackActivity, onTouchStart: this.trackActivity, onTouchMove: this.trackActivity, className: \"appinsights-hoc\" },\n                React.createElement(Component, tslib_1.__assign({}, this.props))));\n        };\n        class_1.prototype.debugLog = function (from, message) {\n            if (reactAI.isDebugMode) {\n                console.log(\"withAITracking:\" + componentName + \":\" + from + \": \" + message, {\n                    engagementTime: this.getEngagementTimeSeconds(),\n                    firstActiveTime: this.firstActiveTimestamp,\n                    idleStartTime: this.idleStartTimestamp,\n                    idleTimeMs: this.totalIdleTime,\n                    lastActiveTime: this.lastActiveTimestamp,\n                    mountTimestamp: this.mountTimestamp\n                });\n            }\n        };\n        class_1.prototype.getEngagementTimeSeconds = function () {\n            return (Date.now() - this.firstActiveTimestamp - this.totalIdleTime - this.idleCount * this.idleTimeout) / 1000;\n        };\n        return class_1;\n    }(React.Component));\n}\n//# sourceMappingURL=withAITracking.js.map"],"names":["StorageType","FieldType","LoggingSeverity","CoreUtils","isNullOrUndefined","input","disableCookies","_canUseCookies","newGuid","replace","GuidRegex","c","r","Math","random","toString","_InternalMessageId","BrowserDoesNotSupportLocalStorage","BrowserCannotReadLocalStorage","BrowserCannotReadSessionStorage","BrowserCannotWriteLocalStorage","BrowserCannotWriteSessionStorage","BrowserFailedRemovalFromLocalStorage","BrowserFailedRemovalFromSessionStorage","CannotSendEmptyTelemetry","ClientPerformanceMathError","ErrorParsingAISessionCookie","ErrorPVCalc","ExceptionWhileLoggingError","FailedAddingTelemetryToBuffer","FailedMonitorAjaxAbort","FailedMonitorAjaxDur","FailedMonitorAjaxOpen","FailedMonitorAjaxRSC","FailedMonitorAjaxSend","FailedMonitorAjaxGetCorrelationHeader","FailedToAddHandlerForOnBeforeUnload","FailedToSendQueuedTelemetry","FailedToReportDataLoss","FlushFailed","MessageLimitPerPVExceeded","MissingRequiredFieldSpecification","NavigationTimingNotSupported","OnError","SessionRenewalDateIsZero","SenderNotInitialized","StartTrackEventFailed","StopTrackEventFailed","StartTrackFailed","StopTrackFailed","TelemetrySampledAndNotSent","TrackEventFailed","TrackExceptionFailed","TrackMetricFailed","TrackPVFailed","TrackPVFailedCalc","TrackTraceFailed","TransmissionFailed","FailedToSetStorageBuffer","FailedToRestoreStorageBuffer","InvalidBackendResponse","FailedToFixDepricatedValues","InvalidDurationValue","TelemetryEnvelopeInvalid","CreateEnvelopeError","CannotSerializeObject","CannotSerializeObjectNonSerializable","CircularReferenceDetected","ClearAuthContextFailed","ExceptionTruncated","IllegalCharsInName","ItemNotInArray","MaxAjaxPerPVExceeded","MessageTruncated","NameTooLong","SampleRateOutOfRange","SetAuthContextFailed","SetAuthContextFailedAccountName","StringValueTooLong","StartCalledMoreThanOnce","StopCalledWithoutStart","TelemetryInitializerFailed","TrackArgumentsNotSpecified","UrlTooLong","SessionStorageBufferFull","CannotAccessCookie","IdTooLong","ChannelController","this","identifier","priority","ChannelControllerPriority","prototype","processTelemetry","item","channelQueue","forEach","queues","length","Object","defineProperty","get","enumerable","configurable","initialize","config","core","extensions","_this","isCookieUseDisabled","Array","channels","invalidChannelIdentifier_1","undefined","queue","sort","a","b","queueItem","Error","ChannelValidationMessage","i","setNextPlugin","push","arr","plugin","DataSanitizer","sanitizeKeyAndAddUniqueness","logger","key","map","origLength","field","sanitizeKey","uniqueField","substring","MAX_NAME_LENGTH","padNumber","name","nameTrunc","trim","throwInternal","WARNING","sanitizeString","value","maxLength","valueTrunc","MAX_STRING_LENGTH","sanitizeUrl","url","sanitizeInput","MAX_URL_LENGTH","sanitizeMessage","message","messageTrunc","MAX_MESSAGE_LENGTH","sanitizeException","exception","exceptionTrunc","MAX_EXCEPTION_LENGTH","sanitizeProperties","properties","tempProps","prop","JSON","stringify","e","MAX_PROPERTY_LENGTH","sanitizeMeasurements","measurements","tempMeasurements","measure","sanitizeId","id","MAX_ID_LENGTH","_msgId","inputTrunc","data","num","s","substr","str","Util","disableStorage","_canUseLocalStorage","_canUseSessionStorage","_getLocalStorageObject","canUseLocalStorage","_getVerifiedStorageObject","LocalStorage","storageType","fail","uid","storage","window","Date","localStorage","sessionStorage","setItem","getItem","removeItem","isInternalApplicationInsightsEndpoint","endpointUrl","_internalEndpoints","indexOf","toLowerCase","getStorage","getExceptionName","dump","setStorage","removeStorage","_getSessionStorageObject","canUseSessionStorage","SessionStorage","getSessionStorageKeys","keys","getSessionStorage","setSessionStorage","removeSessionStorage","canUseCookies","document","cookie","setCookie","domain","domainAttrib","secureAttrib","location","protocol","stringToBoolOrDefault","defaultValue","getCookie","cookieName","cookies","split","deleteCookie","newId","result","charAt","floor","isArray","obj","call","isError","isDate","toISOStringForIE8","date","toISOString","pad","String","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","slice","getIEVersion","userAgentStr","myNav","navigator","userAgent","parseInt","msToTimeSpan","totalms","isNaN","ms","round","sec","min","hour","days","isCrossOriginError","lineNumber","columnNumber","error","object","objectTypeDump","propertyValueDump","stack","addEventHandler","eventName","callback","verbEventName","addEventListener","IsBeaconApiSupported","sendBeacon","getExtension","extension","extIx","NotSpecified","UrlHelper","parseUrl","htmlAnchorElement","createElement","host","parseHost","href","getAbsoluteUrl","getPathName","pathname","getCompleteUrl","method","absoluteUrl","toUpperCase","match","AjaxHelper","ParseDependencyPath","commandName","target","parsedUrl","pathName","DateTimeUtils","Now","getTime","performance","now","timing","navigationStart","GetDuration","start","end","extendStatics","d","setPrototypeOf","__proto__","p","hasOwnProperty","__extends","__","constructor","create","DataPointType","__assign","assign","t","n","arguments","apply","Base","Data","_super","tslib_1.__extends","Envelope","ver","sampleRate","tags","time","aiDataContract","Required","iKey","Hidden","AIEnvelope","Domain","EventData","Event","Default","envelopeType","dataType","StackFrame","ExceptionData","exceptions","ExceptionDetails","hasFullStack","parsedStack","Exception","severityLevel","_ExceptionDetails","CreateFromInterface","ex","tslib_1.__assign","toInterface","_a","problemGroup","isManual","CreateSimpleException","typeName","assembly","fileName","details","line","outerId","parseStack","frame","_StackFrame","frames","level","totalSizeInBytes","regex","test","parsedFrame","sizeInBytes","left","right","size","acceptedLeft","acceptedRight","howMany","splice","sourceFrame","matches","baseSize","MetricData","metrics","SeverityLevel","DataPoint","kind","Measurement","count","max","stdDev","AIDataPoint","Metric","dataPoint","PageViewData","PageView","durationMs","duration","RemoteDependencyData","success","resultCode","requestAPI","type","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","GeneratedRemoteDependencyData","MessageData","Trace","PageViewPerfData","PageViewPerformance","unused","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","baseType","baseData","AIData","PropertiesPluginIdentifier","ReactAI","extensionId","ApplicationInsightsAnalyticsIdentifier","contextProps","debug","customDimensionsInitializer","bind","nextPlugin","settings","reactAISettings","extensionConfig","setContext","initialContext","ext","appInsights","propertiesPlugin","history","addHistoryListener","pageViewTelemetry","uri","context","_trackInitialPageViewInternal","telemetry","trackPageView","debugLog","clearPrevious","envelope","props","listen","action","setTimeout","payload","isDebugMode","console","log","reactAI","withAITracking","Component","componentName","class_1","React.Component","componentDidMount","mountTimestamp","firstActiveTimestamp","totalIdleTime","lastActiveTimestamp","idleStartTimestamp","idleCount","intervalId","setInterval","idleTimeout","componentWillUnmount","clearInterval","engagementTime","getEngagementTimeSeconds","metricData","average","sampleCount","additionalProperties","Component Name","trackMetric","render","React.createElement","onKeyDown","trackActivity","onMouseMove","onScroll","onMouseDown","onTouchStart","onTouchMove","className","from","firstActiveTime","idleStartTime","idleTimeMs","lastActiveTime","lastIdleTime"],"mappings":"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"}